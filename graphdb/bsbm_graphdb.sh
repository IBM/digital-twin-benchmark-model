#!/bin/bash
SIZES=(2000 5000 10000 20000 50000 100000)
for DATASET_SIZE in ${SIZES[@]}; do
  #DATASET_SIZE=50000 # number of products in the dataset. There is around 350 triples generated by product.
  PARALLELISM=16
  VERSION="9.10.0"
  #if [ ! -f "../bsbm-tools/explore-${DATASET_SIZE}.ttl" ]; then
    cd ../bsbm-tools
    rm -rf td_data
    ./generate -fc -pc ${DATASET_SIZE} -s ttl -fn "explore-${DATASET_SIZE}" -ud -ufn "explore-update-${DATASET_SIZE}"
    mv td_data td_data-${DATASET_SIZE}
    cd ../graphdb
  #fi

  docker-compose stop
  docker-compose rm -f
  docker-compose up -d
  sleep 30

  curl -f -X POST http://localhost:7200/rest/repositories -H 'Content-Type:application/json' -d '{"id":"test","params":{"ruleset":{"label":"Ruleset","name":"ruleset","value":"rdfsplus-optimized"},"title":{"label":"Repository title","name":"title","value":"GraphDB Free repository"},"checkForInconsistencies":{"label":"Check for inconsistencies","name":"checkForInconsistencies","value":"false"},"disableSameAs":{"label":"Disable owl:sameAs","name":"disableSameAs","value":"true"},"baseURL":{"label":"Base URL","name":"baseURL","value":"http://example.org/graphdb#"},"repositoryType":{"label":"Repository type","name":"repositoryType","value":"file-repository"},"id":{"label":"Repository ID","name":"id","value":"repo-test"},"storageFolder":{"label":"Storage folder","name":"storageFolder","value":"storage"}},"title":"Test","type":"free"}';
  sleep 10
  curl -f -X PUT -H 'Content-Type:application/x-turtle' -T "../bsbm-tools/explore-${DATASET_SIZE}.ttl" http://localhost:7200/repositories/test/statements
  sleep 30
  #curl -f -X GET -H 'Accept: application/json' http://localhost:7200/rest/repositories/test/size > "graph.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.json"

  curl -X POST "http://localhost:7200/repositories/test" \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -H "Accept:application/sparql-results+json" \
    --data-urlencode 'format=json' \
    --data-urlencode 'query=SELECT (COUNT(*) as ?Triples) WHERE { ?s ?p ?o }' > "graph.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.log"

  cd ../bsbm-tools
  rm -rf td_data
  cp td_data-${DATASET_SIZE} td_data
  ./testdriver -mt ${PARALLELISM} -ucf usecases/explore/sparql.txt -o "../graphdb/bsbm.explore.graphdb.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.xml" http://localhost:7200/repositories/test
  #./testdriver -mt ${PARALLELISM} -ucf usecases/exploreAndUpdate/sparql.txt -o "../graphdb/bsbm.exploreAndUpdate.graphdb.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.xml" http://localhost:7200/repositories/test -u http://localhost:7200/repositories/test/statements -udataset "explore-update-${DATASET_SIZE}.nt"
  #./testdriver -mt ${PARALLELISM} -ucf usecases/businessIntelligence/sparql.txt -o "../graphdb/bsbm.businessIntelligence.graphdb.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.xml" http://localhost:7200/repositories/test
  cd ../graphdb

  docker stats --no-stream > "stats.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.log"
  docker-compose logs > "docker.${VERSION}.${DATASET_SIZE}.${PARALLELISM}.log"
  docker-compose stop
  docker-compose rm -f
done